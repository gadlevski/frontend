name: linting, testing, buildings
run-name: ${{ github.actor }} is testing out GitHub Actions
on: 
  push:
    branches: [master, fix_ui_test]
  pull_request:
    branches: [master]
permissions:
  contents: write
  pages: write
  id-token: write
jobs:
  # build-and-test:
  #   runs-on: ubuntu-20.04
  #   strategy:
  #     matrix: 
  #       node-version: [ 16.18.1 ]
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Starting NodeJS ${{ matrix.node-version }}
  #       uses: actions/setup-node@v1
  #       with: 
  #         node-version: ${{ matrix.node-version }}

  #     - name: Install Dependencies
  #       run: npm ci

  #     - name: Build production project
  #       if: always()
  #       run: npm run b:prod

  #     - name: Build storybook
  #       run: npm run story:b

  #     - name: Generate current UI test screenshots
  #       run: npm run cur

  #     - name: Compare UI test screenshots with reference
  #       run: npm run t:ui
          
  #     - name: Upload artifacts
  #       if: always()
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: test-artifacts
  #         path: 'reports/storybook/**'
  
  checks:
    runs-on: ubuntu-20.04
    strategy:
      matrix: 
        node-version: [ 16.18.1 ]
    steps:
      - uses: actions/checkout@v2

      - name: Starting NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm ci

      - name: Linting typescript with Eslint
        if: always()
        run: npm run l:ts

      - name: Linting scss with Stylelint
        if: always()
        run: npm run l:scss

      - name: Unit testing with Jest
        if: always()
        run: npm run t:unit